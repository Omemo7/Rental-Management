// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rental_Management.DataAccess;

#nullable disable

namespace Rental_Management.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FloorNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("SquaredMeters")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Apartmen__3214EC07F8E63B05");

                    b.HasIndex("LandLordId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.ApartmentsRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Apartmen__3214EC07B4640AEA");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("RentalId");

                    b.HasIndex("TenantId");

                    b.ToTable("ApartmentsRental", (string)null);
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegistrationPlate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Cars__3214EC0751ECB10B");

                    b.HasIndex("LandLordId");

                    b.HasIndex(new[] { "RegistrationPlate" }, "UQ__Cars__808BBC878715B068")
                        .IsUnique();

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.CarsRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__CarsRent__3214EC07509CC1C6");

                    b.HasIndex("CarId");

                    b.HasIndex("RentalId");

                    b.HasIndex("TenantId");

                    b.ToTable("CarsRental", (string)null);
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.CustomItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__CustomIt__3214EC07CFB34A9D");

                    b.HasIndex("CustomItemTypeId");

                    b.HasIndex("LandLordId");

                    b.ToTable("CustomItems");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.CustomItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__CustomIt__3214EC074C5141F9");

                    b.HasIndex("LandLordId");

                    b.ToTable("CustomItemTypes");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.CustomRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomItemId")
                        .HasColumnType("int");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__CustomRe__3214EC07056E6677");

                    b.HasIndex("CustomItemId");

                    b.HasIndex("RentalId");

                    b.HasIndex("TenantId");

                    b.ToTable("CustomRental", (string)null);
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Landlord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__Landlord__3214EC07DA20C497");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.HasIndex(new[] { "PersonId" }, "UQ__Landlord__AA2FFBE4C2545929")
                        .IsUnique();

                    b.ToTable("Landlords");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Payments__3214EC07F323E055");

                    b.HasIndex("RentalId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationalNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__People__3214EC07E83BA829");

                    b.HasIndex(new[] { "Email" }, "UQ__People__A9D10534AD779934")
                        .IsUnique();

                    b.HasIndex(new[] { "NationalNumber" }, "UQ__People__FEA173C223F8E2CE")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone");

                    b.HasKey("Id")
                        .HasName("PK__Phones__3214EC0762C0D826");

                    b.HasIndex("PersonId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contract")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("RentPaymentFrequency")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Rental__3214EC07D5158E43");

                    b.ToTable("Rental", (string)null);
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Tenants__3214EC07ECF2AB13");

                    b.HasIndex(new[] { "PersonId" }, "UQ__Tenants__AA2FFBE43D2D3932")
                        .IsUnique();

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Apartment", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.Landlord", "LandLord")
                        .WithMany("Apartments")
                        .HasForeignKey("LandLordId")
                        .IsRequired()
                        .HasConstraintName("FK_Apartments_Landlords");

                    b.Navigation("LandLord");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.ApartmentsRental", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.Apartment", "Apartment")
                        .WithMany("ApartmentsRentals")
                        .HasForeignKey("ApartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_ApartmentsRental_Apartments");

                    b.HasOne("Rental_Management.DataAccess.Entities.Rental", "Rental")
                        .WithMany("ApartmentsRentals")
                        .HasForeignKey("RentalId")
                        .IsRequired()
                        .HasConstraintName("FK_ApartmentsRental_Rental");

                    b.HasOne("Rental_Management.DataAccess.Entities.Tenant", "Tenant")
                        .WithMany("ApartmentsRentals")
                        .HasForeignKey("TenantId")
                        .IsRequired()
                        .HasConstraintName("FK_ApartmentsRental_Tenants");

                    b.Navigation("Apartment");

                    b.Navigation("Rental");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Car", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.Landlord", "LandLord")
                        .WithMany("Cars")
                        .HasForeignKey("LandLordId")
                        .IsRequired()
                        .HasConstraintName("FK_Cars_Landlords");

                    b.Navigation("LandLord");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.CarsRental", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.Car", "Car")
                        .WithMany("CarsRentals")
                        .HasForeignKey("CarId")
                        .IsRequired()
                        .HasConstraintName("FK_CarsRental_Cars");

                    b.HasOne("Rental_Management.DataAccess.Entities.Rental", "Rental")
                        .WithMany("CarsRentals")
                        .HasForeignKey("RentalId")
                        .IsRequired()
                        .HasConstraintName("FK_CarsRental_Rental");

                    b.HasOne("Rental_Management.DataAccess.Entities.Tenant", "Tenant")
                        .WithMany("CarsRentals")
                        .HasForeignKey("TenantId")
                        .IsRequired()
                        .HasConstraintName("FK_CarsRental_Tenants");

                    b.Navigation("Car");

                    b.Navigation("Rental");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.CustomItem", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.CustomItemType", "CustomItemType")
                        .WithMany("CustomItems")
                        .HasForeignKey("CustomItemTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomItems_CustomItemTypes");

                    b.HasOne("Rental_Management.DataAccess.Entities.Landlord", "LandLord")
                        .WithMany("CustomItems")
                        .HasForeignKey("LandLordId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomItems_Landlords");

                    b.Navigation("CustomItemType");

                    b.Navigation("LandLord");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.CustomItemType", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.Landlord", "LandLord")
                        .WithMany("CustomItemTypes")
                        .HasForeignKey("LandLordId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomItemTypes_Landlords");

                    b.Navigation("LandLord");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.CustomRental", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.CustomItem", "CustomItem")
                        .WithMany("CustomRentals")
                        .HasForeignKey("CustomItemId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomRental_CustomItems");

                    b.HasOne("Rental_Management.DataAccess.Entities.Rental", "Rental")
                        .WithMany("CustomRentals")
                        .HasForeignKey("RentalId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomRental_Rental");

                    b.HasOne("Rental_Management.DataAccess.Entities.Tenant", "Tenant")
                        .WithMany("CustomRentals")
                        .HasForeignKey("TenantId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomRental_Tenants");

                    b.Navigation("CustomItem");

                    b.Navigation("Rental");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Landlord", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.Person", "Person")
                        .WithOne("Landlord")
                        .HasForeignKey("Rental_Management.DataAccess.Entities.Landlord", "PersonId")
                        .IsRequired()
                        .HasConstraintName("FK_Landlords_People");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Payment", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.Rental", "Rental")
                        .WithMany("Payments")
                        .HasForeignKey("RentalId")
                        .IsRequired()
                        .HasConstraintName("FK_Payments_Rental");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Phone", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.Person", "Person")
                        .WithMany("Phones")
                        .HasForeignKey("PersonId")
                        .IsRequired()
                        .HasConstraintName("FK_Phones_People");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Tenant", b =>
                {
                    b.HasOne("Rental_Management.DataAccess.Entities.Person", "Person")
                        .WithOne("Tenant")
                        .HasForeignKey("Rental_Management.DataAccess.Entities.Tenant", "PersonId")
                        .IsRequired()
                        .HasConstraintName("FK_Tenants_People");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Apartment", b =>
                {
                    b.Navigation("ApartmentsRentals");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Car", b =>
                {
                    b.Navigation("CarsRentals");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.CustomItem", b =>
                {
                    b.Navigation("CustomRentals");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.CustomItemType", b =>
                {
                    b.Navigation("CustomItems");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Landlord", b =>
                {
                    b.Navigation("Apartments");

                    b.Navigation("Cars");

                    b.Navigation("CustomItemTypes");

                    b.Navigation("CustomItems");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Person", b =>
                {
                    b.Navigation("Landlord");

                    b.Navigation("Phones");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Rental", b =>
                {
                    b.Navigation("ApartmentsRentals");

                    b.Navigation("CarsRentals");

                    b.Navigation("CustomRentals");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Rental_Management.DataAccess.Entities.Tenant", b =>
                {
                    b.Navigation("ApartmentsRentals");

                    b.Navigation("CarsRentals");

                    b.Navigation("CustomRentals");
                });
#pragma warning restore 612, 618
        }
    }
}
