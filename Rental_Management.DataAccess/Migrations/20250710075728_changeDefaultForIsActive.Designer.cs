// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rental_Management.DataAccess;

#nullable disable

namespace Rental_Management.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250710075728_changeDefaultForIsActive")]
    partial class changeDefaultForIsActive
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rental_Management.Business.Entities.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApartmentBuildingId")
                        .HasColumnType("int");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<bool>("Occupied")
                        .HasColumnType("bit");

                    b.Property<decimal>("SquaredMeters")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentBuildingId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.ApartmentBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LandLordId");

                    b.ToTable("ApartmentBuildings");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.ApartmentsRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("RentalId")
                        .IsUnique();

                    b.ToTable("ApartmentsRentals");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationPlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vacant")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LandLordId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.CarsRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("RentalId")
                        .IsUnique();

                    b.ToTable("CarsRentals");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.CustomItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vacant")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomItemTypeId");

                    b.HasIndex("LandLordId");

                    b.ToTable("CustomItems");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.CustomItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LandLordId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LandLordId");

                    b.ToTable("CustomItemTypes");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.CustomRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomItemId")
                        .HasColumnType("int");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomItemId");

                    b.HasIndex("RentalId")
                        .IsUnique();

                    b.ToTable("CustomRentals");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Landlord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Landlords");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Maintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CustomItemId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("MaintenanceDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomItemId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RentalId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.RentPaymentFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RentPaymentFrequency");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateOnly>("LastNotificationDate")
                        .HasColumnType("date");

                    b.Property<int>("RentPaymentFrequencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("RentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RentPaymentFrequencyId");

                    b.HasIndex("TenantId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandlordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LandlordId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.TenantPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TenantsPhones");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Apartment", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.ApartmentBuilding", "ApartmentBuilding")
                        .WithMany("Apartments")
                        .HasForeignKey("ApartmentBuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApartmentBuilding");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.ApartmentBuilding", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.Landlord", "LandLord")
                        .WithMany("ApartmentBuildings")
                        .HasForeignKey("LandLordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LandLord");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.ApartmentsRental", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.Apartment", "Apartment")
                        .WithMany("ApartmentsRentals")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rental_Management.Business.Entities.Rental", "Rental")
                        .WithOne("ApartmentRental")
                        .HasForeignKey("Rental_Management.Business.Entities.ApartmentsRental", "RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Car", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.Landlord", "LandLord")
                        .WithMany("Cars")
                        .HasForeignKey("LandLordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LandLord");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.CarsRental", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.Car", "Car")
                        .WithMany("CarsRentals")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rental_Management.Business.Entities.Rental", "Rental")
                        .WithOne("CarRental")
                        .HasForeignKey("Rental_Management.Business.Entities.CarsRental", "RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.CustomItem", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.CustomItemType", "CustomItemType")
                        .WithMany("CustomItems")
                        .HasForeignKey("CustomItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rental_Management.Business.Entities.Landlord", "LandLord")
                        .WithMany("CustomItems")
                        .HasForeignKey("LandLordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomItemType");

                    b.Navigation("LandLord");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.CustomItemType", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.Landlord", "LandLord")
                        .WithMany("CustomItemTypes")
                        .HasForeignKey("LandLordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LandLord");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.CustomRental", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.CustomItem", "CustomItem")
                        .WithMany("CustomRentals")
                        .HasForeignKey("CustomItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rental_Management.Business.Entities.Rental", "Rental")
                        .WithOne("CustomRental")
                        .HasForeignKey("Rental_Management.Business.Entities.CustomRental", "RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomItem");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Maintenance", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.Apartment", "Apartment")
                        .WithMany("Maintenances")
                        .HasForeignKey("ApartmentId");

                    b.HasOne("Rental_Management.Business.Entities.Car", "Car")
                        .WithMany("Maintenances")
                        .HasForeignKey("CarId");

                    b.HasOne("Rental_Management.Business.Entities.CustomItem", "CustomItem")
                        .WithMany("Maintenances")
                        .HasForeignKey("CustomItemId");

                    b.Navigation("Apartment");

                    b.Navigation("Car");

                    b.Navigation("CustomItem");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Payment", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.Rental", "Rental")
                        .WithMany("Payments")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Rental", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.RentPaymentFrequency", "RentPaymentFrequency")
                        .WithMany("Rentals")
                        .HasForeignKey("RentPaymentFrequencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rental_Management.Business.Entities.Tenant", "Tenant")
                        .WithMany("Rentals")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RentPaymentFrequency");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Tenant", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.Landlord", "Landlord")
                        .WithMany("Tenants")
                        .HasForeignKey("LandlordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Landlord");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.TenantPhone", b =>
                {
                    b.HasOne("Rental_Management.Business.Entities.Tenant", "Tenant")
                        .WithMany("Phones")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Apartment", b =>
                {
                    b.Navigation("ApartmentsRentals");

                    b.Navigation("Maintenances");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.ApartmentBuilding", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Car", b =>
                {
                    b.Navigation("CarsRentals");

                    b.Navigation("Maintenances");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.CustomItem", b =>
                {
                    b.Navigation("CustomRentals");

                    b.Navigation("Maintenances");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.CustomItemType", b =>
                {
                    b.Navigation("CustomItems");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Landlord", b =>
                {
                    b.Navigation("ApartmentBuildings");

                    b.Navigation("Cars");

                    b.Navigation("CustomItemTypes");

                    b.Navigation("CustomItems");

                    b.Navigation("Tenants");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.RentPaymentFrequency", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Rental", b =>
                {
                    b.Navigation("ApartmentRental");

                    b.Navigation("CarRental");

                    b.Navigation("CustomRental");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Rental_Management.Business.Entities.Tenant", b =>
                {
                    b.Navigation("Phones");

                    b.Navigation("Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
